#!/bin/bash

### BEGIN INIT INFO
# Provides:          irondomedeamon
# Required-Start:    $local_fs $network $syslog
# Required-Stop:     $local_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Irondome service, run as service irondome script python
# Description:       Example service irondome start - Debian
# NOTES: https://blog.frd.mn/how-to-set-up-proper-startstop-services-ubuntu-debian-mac-windows/
### END INIT INFO

NAME="irondome"
PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"
APPDIR="/usr/src"
APPBIN="./irondome.sh"
APPEX="$APPDIR/$APPBIN"
APPARGS="/data"
USER="root"
GROUP="root"
PIDFILE=/var/run/$NAME.pid


# Include functions
set -e
[ -x $APPEX ] || exit 0
. /lib/lsb/init-functions
[ -f ${APPDIR}/environment ] && . ${APPDIR}/environment
export EXTMON
export DIRMON
start() {
  log_daemon_msg "Starting '$NAME'... "
#  echo "EXTMON=${EXTMON}"
#  echo "DIRMON=${DIRMON}"
  cd ${APPDIR}
  start_daemon -p $PIDFILE ${APPDIR}/${APPBIN} ${APPARGS}
  log_end_msg $?
}

#We need this function to ensure the whole process tree will be killed
killtree() {
  local _pid=$1
  local _sig=${2-TERM}
  for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
    killtree ${_child} ${_sig}
  done
  kill -${_sig} ${_pid}
}

stop() {
  log_daemon_msg "Stopping '$NAME'... "
  [ -z $(cat $PIDFILE 2>/dev/null) ] ||
    while test -d /proc/$(cat /var/run/$NAME.pid); do
      killtree $(cat $PIDFILE) 15
      sleep 0.5
    done
  [ -z $(cat $PIDFILE 2>/dev/null) ] || rm $PIDFILE
  log_end_msg $?
}

status() {
  status_of_proc -p $PIDFILE $NAME.sh && exit 0 || exit $?
}

case "$1" in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart)
    stop
    start
  ;;
  status)
    status
  ;;
  *)
    echo "Usage: $NAME {start|stop|restart|status}" >&2
    exit 1
  ;;
esac

exit 0
